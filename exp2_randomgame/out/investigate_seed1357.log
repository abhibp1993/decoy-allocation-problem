2023-09-16 04:01:25.219 | DEBUG    | solvers:solve_base_game:570 - Base game solved. 
Final: {33, 2, 37, 133, 44, 111, 145, 85, 88, 60}.
Winning nodes P2: {0, 1, 2, 4, 5, 7, 8, 9, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 42, 44, 47, 52, 54, 55, 56, 60, 61, 62, 65, 66, 67, 69, 70, 71, 74, 76, 77, 80, 81, 82, 85, 88, 92, 94, 96, 98, 100, 101, 104, 106, 108, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 129, 130, 131, 132, 133, 136, 137, 141, 145, 147, 148, 149}.
Winning nodes P1: {128, 3, 6, 134, 135, 10, 11, 12, 13, 14, 15, 16, 138, 139, 19, 140, 21, 142, 143, 144, 146, 32, 35, 36, 40, 41, 43, 45, 46, 48, 49, 50, 51, 53, 57, 58, 59, 63, 64, 68, 72, 73, 75, 78, 79, 83, 84, 86, 87, 89, 90, 91, 93, 95, 97, 99, 102, 103, 105, 107, 110, 112, 114, 119, 124, 125, 126, 127}.
2023-09-16 04:01:25.220 | DEBUG    | solvers:solve:257 - Solving base game.
2023-09-16 04:01:25.234 | DEBUG    | solvers:solve_p2game:555 - P2 game solved. 
Final: {33, 2, 37, 133, 44, 111, 145, 85, 88, 60}, Fakes: {101}
Winning nodes P2: {0, 1, 2, 4, 5, 7, 8, 9, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 42, 44, 47, 52, 54, 55, 56, 60, 61, 62, 65, 66, 67, 69, 70, 71, 74, 76, 77, 80, 81, 82, 85, 88, 92, 94, 96, 98, 100, 101, 104, 106, 108, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 129, 130, 131, 132, 133, 136, 137, 141, 145, 147, 148, 149}.
Winning nodes P1: {128, 3, 6, 134, 135, 10, 11, 12, 13, 14, 15, 16, 138, 139, 19, 140, 21, 142, 143, 144, 146, 32, 35, 36, 40, 41, 43, 45, 46, 48, 49, 50, 51, 53, 57, 58, 59, 63, 64, 68, 72, 73, 75, 78, 79, 83, 84, 86, 87, 89, 90, 91, 93, 95, 97, 99, 102, 103, 105, 107, 110, 112, 114, 119, 124, 125, 126, 127}.
2023-09-16 04:01:25.264 | DEBUG    | solvers:solve:279 - Hypergame: 
Nodes:[(0, {'turn': 2, 'label': set()}), (1, {'turn': 2, 'label': set()}), (2, {'turn': 2, 'label': {'goal'}}), (4, {'turn': 2, 'label': set()}), (5, {'turn': 1, 'label': set()}), (7, {'turn': 1, 'label': set()}), (8, {'turn': 2, 'label': set()}), (9, {'turn': 2, 'label': set()}), (17, {'turn': 1, 'label': set()}), (18, {'turn': 1, 'label': set()}), (20, {'turn': 2, 'label': set()}), (22, {'turn': 1, 'label': set()}), (23, {'turn': 2, 'label': set()}), (24, {'turn': 2, 'label': set()}), (25, {'turn': 2, 'label': set()}), (26, {'turn': 1, 'label': set()}), (27, {'turn': 2, 'label': set()}), (28, {'turn': 1, 'label': set()}), (29, {'turn': 2, 'label': set()}), (30, {'turn': 1, 'label': set()}), (31, {'turn': 1, 'label': set()}), (33, {'turn': 2, 'label': {'goal'}}), (34, {'turn': 1, 'label': set()}), (37, {'turn': 1, 'label': {'goal'}}), (38, {'turn': 2, 'label': set()}), (39, {'turn': 1, 'label': set()}), (42, {'turn': 2, 'label': set()}), (44, {'turn': 2, 'label': {'goal'}}), (47, {'turn': 2, 'label': set()}), (52, {'turn': 2, 'label': set()}), (54, {'turn': 2, 'label': set()}), (55, {'turn': 1, 'label': set()}), (56, {'turn': 2, 'label': set()}), (60, {'turn': 1, 'label': {'goal'}}), (61, {'turn': 1, 'label': set()}), (62, {'turn': 2, 'label': set()}), (65, {'turn': 2, 'label': set()}), (66, {'turn': 1, 'label': set()}), (67, {'turn': 1, 'label': set()}), (69, {'turn': 2, 'label': set()}), (70, {'turn': 2, 'label': set()}), (71, {'turn': 1, 'label': set()}), (74, {'turn': 2, 'label': set()}), (76, {'turn': 2, 'label': set()}), (77, {'turn': 2, 'label': set()}), (80, {'turn': 1, 'label': set()}), (81, {'turn': 2, 'label': set()}), (82, {'turn': 2, 'label': set()}), (85, {'turn': 2, 'label': {'goal'}}), (88, {'turn': 1, 'label': {'goal'}}), (92, {'turn': 2, 'label': set()}), (94, {'turn': 2, 'label': set()}), (96, {'turn': 2, 'label': set()}), (98, {'turn': 2, 'label': set()}), (100, {'turn': 1, 'label': set()}), (101, {'turn': 1, 'label': set()}), (104, {'turn': 2, 'label': set()}), (106, {'turn': 1, 'label': set()}), (108, {'turn': 2, 'label': set()}), (109, {'turn': 2, 'label': set()}), (111, {'turn': 1, 'label': {'goal'}}), (113, {'turn': 2, 'label': set()}), (115, {'turn': 2, 'label': set()}), (116, {'turn': 1, 'label': set()}), (117, {'turn': 1, 'label': set()}), (118, {'turn': 1, 'label': set()}), (120, {'turn': 2, 'label': set()}), (121, {'turn': 2, 'label': set()}), (122, {'turn': 2, 'label': set()}), (123, {'turn': 2, 'label': set()}), (129, {'turn': 2, 'label': set()}), (130, {'turn': 2, 'label': set()}), (131, {'turn': 2, 'label': set()}), (132, {'turn': 2, 'label': set()}), (133, {'turn': 2, 'label': {'goal'}}), (136, {'turn': 1, 'label': set()}), (137, {'turn': 2, 'label': set()}), (141, {'turn': 2, 'label': set()}), (145, {'turn': 1, 'label': {'goal'}}), (147, {'turn': 2, 'label': set()}), (148, {'turn': 2, 'label': set()}), (149, {'turn': 2, 'label': set()})], 
Edges:[(0, 136, 'b2'), (1, 66, 'b2'), (2, 2, 'b2'), (2, 2, 'b1'), (2, 2, 'b0'), (4, 61, 'b0'), (5, 81, 'a1'), (5, 115, 'a0'), (5, 133, 'a2'), (7, 69, 'a0'), (8, 118, 'b3'), (9, 88, 'b4'), (17, 74, 'a1'), (17, 23, 'a0'), (18, 4, 'a1'), (18, 20, 'a0'), (20, 26, 'b1'), (22, 74, 'a1'), (22, 74, 'a0'), (23, 116, 'b3'), (24, 22, 'b0'), (25, 66, 'b0'), (26, 149, 'a0'), (27, 30, 'b0'), (27, 5, 'b3'), (28, 149, 'a0'), (29, 116, 'b0'), (30, 85, 'a1'), (30, 81, 'a0'), (31, 24, 'a1'), (31, 27, 'a0'), (34, 70, 'a1'), (34, 94, 'a0'), (34, 92, 'a2'), (37, 37, 'a1'), (37, 37, 'a0'), (38, 101, 'b1'), (39, 52, 'a0'), (42, 101, 'b0'), (44, 44, 'b0'), (47, 101, 'b0'), (52, 28, 'b2'), (54, 60, 'b2'), (54, 101, 'b0'), (55, 38, 'a1'), (55, 123, 'a0'), (56, 22, 'b2'), (60, 60, 'a3'), (60, 60, 'a1'), (60, 60, 'a0'), (60, 60, 'a2'), (61, 65, 'a1'), (61, 98, 'a0'), (61, 24, 'a2'), (62, 145, 'b0'), (65, 80, 'b2'), (66, 109, 'a1'), (66, 24, 'a0'), (67, 98, 'a1'), (67, 141, 'a0'), (69, 55, 'b2'), (70, 67, 'b0'), (71, 24, 'a0'), (74, 37, 'b4'), (76, 116, 'b0'), (77, 28, 'b2'), (77, 28, 'b0'), (80, 85, 'a0'), (81, 117, 'b3'), (82, 67, 'b1'), (85, 85, 'b2'), (85, 85, 'b1'), (88, 88, 'a1'), (88, 88, 'a0'), (88, 88, 'a2'), (92, 136, 'b1'), (94, 136, 'b3'), (96, 101, 'b0'), (98, 26, 'b0'), (100, 52, 'a1'), (100, 82, 'a0'), (100, 23, 'a2'), (101, 101, 'a0'), (104, 37, 'b0'), (106, 123, 'a0'), (108, 17, 'b0'), (109, 71, 'b2'), (113, 80, 'b0'), (115, 106, 'b2'), (116, 96, 'a0'), (117, 47, 'a1'), (117, 4, 'a0'), (118, 133, 'a0'), (120, 111, 'b0'), (121, 30, 'b0'), (122, 55, 'b0'), (123, 116, 'b2'), (129, 67, 'b1'), (130, 145, 'b1'), (130, 111, 'b0'), (131, 100, 'b2'), (132, 88, 'b1'), (133, 133, 'b2'), (136, 131, 'a1'), (136, 62, 'a0'), (136, 24, 'a2'), (137, 118, 'b0'), (141, 18, 'b0'), (145, 145, 'a1'), (145, 145, 'a0'), (145, 145, 'a2'), (147, 145, 'b4'), (148, 55, 'b1'), (149, 55, 'b0')]
2023-09-16 04:01:25.265 | DEBUG    | solvers:solve:280 - Base game solved. 
Final: {101}.
Winning nodes P2: {1, 2, 130, 132, 133, 8, 9, 137, 145, 147, 22, 24, 25, 33, 37, 44, 54, 56, 60, 62, 65, 66, 71, 74, 80, 85, 88, 104, 109, 111, 113, 118, 120}.
Winning nodes P1: {0, 129, 131, 4, 5, 7, 136, 141, 17, 18, 148, 149, 20, 23, 26, 27, 28, 29, 30, 31, 34, 38, 39, 42, 47, 52, 55, 61, 67, 69, 70, 76, 77, 81, 82, 92, 94, 96, 98, 100, 101, 106, 108, 115, 116, 117, 121, 122, 123}.
2023-09-16 04:01:25.265 | DEBUG    | solvers:solve:298 - Value of deception: 0.6805555555555556
2023-09-16 04:01:25.266 | SUCCESS  | __main__:<module>:31 - Q. What is VoD if first fake was placed at where the first trap was placed?
A. VoD(dswin, trap={101})=0.6805, VoD(dswin,fake={101})=0.6805555555555556
2023-09-16 04:01:25.267 | DEBUG    | solvers:solve:257 - Solving base game.
2023-09-16 04:01:25.281 | DEBUG    | solvers:solve_p2game:555 - P2 game solved. 
Final: {33, 2, 37, 133, 44, 111, 145, 85, 88, 60}, Fakes: {74, 101}
Winning nodes P2: {0, 1, 2, 4, 5, 7, 8, 9, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 42, 44, 47, 52, 54, 55, 56, 60, 61, 62, 65, 66, 67, 69, 70, 71, 74, 76, 77, 80, 81, 82, 85, 88, 92, 94, 96, 98, 100, 101, 104, 106, 108, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 129, 130, 131, 132, 133, 136, 137, 141, 145, 147, 148, 149}.
Winning nodes P1: {128, 3, 6, 134, 135, 10, 11, 12, 13, 14, 15, 16, 138, 139, 19, 140, 21, 142, 143, 144, 146, 32, 35, 36, 40, 41, 43, 45, 46, 48, 49, 50, 51, 53, 57, 58, 59, 63, 64, 68, 72, 73, 75, 78, 79, 83, 84, 86, 87, 89, 90, 91, 93, 95, 97, 99, 102, 103, 105, 107, 110, 112, 114, 119, 124, 125, 126, 127}.
2023-09-16 04:01:25.290 | DEBUG    | solvers:solve:279 - Hypergame: 
Nodes:[(0, {'turn': 2, 'label': set()}), (1, {'turn': 2, 'label': set()}), (2, {'turn': 2, 'label': {'goal'}}), (4, {'turn': 2, 'label': set()}), (5, {'turn': 1, 'label': set()}), (7, {'turn': 1, 'label': set()}), (8, {'turn': 2, 'label': set()}), (9, {'turn': 2, 'label': set()}), (17, {'turn': 1, 'label': set()}), (18, {'turn': 1, 'label': set()}), (20, {'turn': 2, 'label': set()}), (22, {'turn': 1, 'label': set()}), (23, {'turn': 2, 'label': set()}), (24, {'turn': 2, 'label': set()}), (25, {'turn': 2, 'label': set()}), (26, {'turn': 1, 'label': set()}), (27, {'turn': 2, 'label': set()}), (28, {'turn': 1, 'label': set()}), (29, {'turn': 2, 'label': set()}), (30, {'turn': 1, 'label': set()}), (31, {'turn': 1, 'label': set()}), (33, {'turn': 2, 'label': {'goal'}}), (34, {'turn': 1, 'label': set()}), (37, {'turn': 1, 'label': {'goal'}}), (38, {'turn': 2, 'label': set()}), (39, {'turn': 1, 'label': set()}), (42, {'turn': 2, 'label': set()}), (44, {'turn': 2, 'label': {'goal'}}), (47, {'turn': 2, 'label': set()}), (52, {'turn': 2, 'label': set()}), (54, {'turn': 2, 'label': set()}), (55, {'turn': 1, 'label': set()}), (56, {'turn': 2, 'label': set()}), (60, {'turn': 1, 'label': {'goal'}}), (61, {'turn': 1, 'label': set()}), (62, {'turn': 2, 'label': set()}), (65, {'turn': 2, 'label': set()}), (66, {'turn': 1, 'label': set()}), (67, {'turn': 1, 'label': set()}), (69, {'turn': 2, 'label': set()}), (70, {'turn': 2, 'label': set()}), (71, {'turn': 1, 'label': set()}), (74, {'turn': 2, 'label': set()}), (76, {'turn': 2, 'label': set()}), (77, {'turn': 2, 'label': set()}), (80, {'turn': 1, 'label': set()}), (81, {'turn': 2, 'label': set()}), (82, {'turn': 2, 'label': set()}), (85, {'turn': 2, 'label': {'goal'}}), (88, {'turn': 1, 'label': {'goal'}}), (92, {'turn': 2, 'label': set()}), (94, {'turn': 2, 'label': set()}), (96, {'turn': 2, 'label': set()}), (98, {'turn': 2, 'label': set()}), (100, {'turn': 1, 'label': set()}), (101, {'turn': 1, 'label': set()}), (104, {'turn': 2, 'label': set()}), (106, {'turn': 1, 'label': set()}), (108, {'turn': 2, 'label': set()}), (109, {'turn': 2, 'label': set()}), (111, {'turn': 1, 'label': {'goal'}}), (113, {'turn': 2, 'label': set()}), (115, {'turn': 2, 'label': set()}), (116, {'turn': 1, 'label': set()}), (117, {'turn': 1, 'label': set()}), (118, {'turn': 1, 'label': set()}), (120, {'turn': 2, 'label': set()}), (121, {'turn': 2, 'label': set()}), (122, {'turn': 2, 'label': set()}), (123, {'turn': 2, 'label': set()}), (129, {'turn': 2, 'label': set()}), (130, {'turn': 2, 'label': set()}), (131, {'turn': 2, 'label': set()}), (132, {'turn': 2, 'label': set()}), (133, {'turn': 2, 'label': {'goal'}}), (136, {'turn': 1, 'label': set()}), (137, {'turn': 2, 'label': set()}), (141, {'turn': 2, 'label': set()}), (145, {'turn': 1, 'label': {'goal'}}), (147, {'turn': 2, 'label': set()}), (148, {'turn': 2, 'label': set()}), (149, {'turn': 2, 'label': set()})], 
Edges:[(0, 136, 'b2'), (1, 66, 'b2'), (2, 2, 'b2'), (2, 2, 'b1'), (2, 2, 'b0'), (4, 61, 'b0'), (5, 81, 'a1'), (5, 115, 'a0'), (5, 133, 'a2'), (7, 69, 'a0'), (8, 118, 'b3'), (9, 88, 'b4'), (17, 74, 'a1'), (17, 23, 'a0'), (18, 4, 'a1'), (18, 20, 'a0'), (20, 26, 'b1'), (22, 74, 'a1'), (22, 74, 'a0'), (23, 116, 'b3'), (24, 22, 'b0'), (25, 66, 'b0'), (26, 149, 'a0'), (27, 30, 'b0'), (27, 5, 'b3'), (28, 149, 'a0'), (29, 116, 'b0'), (30, 85, 'a1'), (30, 81, 'a0'), (31, 24, 'a1'), (31, 27, 'a0'), (34, 70, 'a1'), (34, 94, 'a0'), (34, 92, 'a2'), (37, 37, 'a1'), (37, 37, 'a0'), (38, 101, 'b1'), (39, 52, 'a0'), (42, 101, 'b0'), (44, 44, 'b0'), (47, 101, 'b0'), (52, 28, 'b2'), (54, 60, 'b2'), (54, 101, 'b0'), (55, 38, 'a1'), (55, 123, 'a0'), (56, 22, 'b2'), (60, 60, 'a3'), (60, 60, 'a1'), (60, 60, 'a0'), (60, 60, 'a2'), (61, 65, 'a1'), (61, 98, 'a0'), (61, 24, 'a2'), (62, 145, 'b0'), (65, 80, 'b2'), (66, 109, 'a1'), (66, 24, 'a0'), (67, 98, 'a1'), (67, 141, 'a0'), (69, 55, 'b2'), (70, 67, 'b0'), (71, 24, 'a0'), (74, 74, 'b0'), (74, 74, 'b4'), (74, 74, 'b3'), (76, 116, 'b0'), (77, 28, 'b2'), (77, 28, 'b0'), (80, 85, 'a0'), (81, 117, 'b3'), (82, 67, 'b1'), (85, 85, 'b2'), (85, 85, 'b1'), (88, 88, 'a1'), (88, 88, 'a0'), (88, 88, 'a2'), (92, 136, 'b1'), (94, 136, 'b3'), (96, 101, 'b0'), (98, 26, 'b0'), (100, 52, 'a1'), (100, 82, 'a0'), (100, 23, 'a2'), (101, 101, 'a0'), (104, 37, 'b0'), (106, 123, 'a0'), (108, 17, 'b0'), (109, 71, 'b2'), (113, 80, 'b0'), (115, 106, 'b2'), (116, 96, 'a0'), (117, 47, 'a1'), (117, 4, 'a0'), (118, 133, 'a0'), (120, 111, 'b0'), (121, 30, 'b0'), (122, 55, 'b0'), (123, 116, 'b2'), (129, 67, 'b1'), (130, 145, 'b1'), (130, 111, 'b0'), (131, 100, 'b2'), (132, 88, 'b1'), (133, 133, 'b2'), (136, 131, 'a1'), (136, 62, 'a0'), (136, 24, 'a2'), (137, 118, 'b0'), (141, 18, 'b0'), (145, 145, 'a1'), (145, 145, 'a0'), (145, 145, 'a2'), (147, 145, 'b4'), (148, 55, 'b1'), (149, 55, 'b0')]
2023-09-16 04:01:25.291 | DEBUG    | solvers:solve:280 - Base game solved. 
Final: {74, 101}.
Winning nodes P2: {2, 130, 132, 133, 8, 9, 137, 145, 147, 33, 37, 44, 54, 60, 62, 65, 80, 85, 88, 104, 111, 113, 118, 120}.
Winning nodes P1: {0, 1, 129, 131, 4, 5, 7, 136, 141, 17, 18, 148, 149, 22, 23, 24, 25, 26, 20, 28, 29, 30, 31, 27, 34, 38, 39, 42, 47, 52, 55, 56, 61, 66, 67, 69, 70, 71, 74, 76, 77, 81, 82, 92, 94, 96, 98, 100, 101, 106, 108, 109, 115, 116, 117, 121, 122, 123}.
2023-09-16 04:01:25.292 | DEBUG    | solvers:solve:298 - Value of deception: 0.8055555555555556
2023-09-16 04:01:25.292 | SUCCESS  | __main__:<module>:37 - Q. What is VoD if first two fakes were placed at where the first two traps were placed?
A. VoD(dswin, trap={101,74})=0.8055, VoD(dswin,fake={101,74})=0.8055555555555556
2023-09-16 04:01:25.292 | DEBUG    | solvers:solve:257 - Solving base game.
2023-09-16 04:01:25.320 | DEBUG    | solvers:solve_p2game:555 - P2 game solved. 
Final: {33, 2, 37, 133, 44, 111, 145, 85, 88, 60}, Fakes: {80, 74, 101}
Winning nodes P2: {0, 1, 2, 4, 5, 7, 8, 9, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 42, 44, 47, 52, 54, 55, 56, 60, 61, 62, 65, 66, 67, 69, 70, 71, 74, 76, 77, 80, 81, 82, 85, 88, 92, 94, 96, 98, 100, 101, 104, 106, 108, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 129, 130, 131, 132, 133, 136, 137, 141, 145, 147, 148, 149}.
Winning nodes P1: {128, 3, 6, 134, 135, 10, 11, 12, 13, 14, 15, 16, 138, 139, 19, 140, 21, 142, 143, 144, 146, 32, 35, 36, 40, 41, 43, 45, 46, 48, 49, 50, 51, 53, 57, 58, 59, 63, 64, 68, 72, 73, 75, 78, 79, 83, 84, 86, 87, 89, 90, 91, 93, 95, 97, 99, 102, 103, 105, 107, 110, 112, 114, 119, 124, 125, 126, 127}.
2023-09-16 04:01:25.326 | DEBUG    | solvers:solve:279 - Hypergame: 
Nodes:[(0, {'turn': 2, 'label': set()}), (1, {'turn': 2, 'label': set()}), (2, {'turn': 2, 'label': {'goal'}}), (4, {'turn': 2, 'label': set()}), (5, {'turn': 1, 'label': set()}), (7, {'turn': 1, 'label': set()}), (8, {'turn': 2, 'label': set()}), (9, {'turn': 2, 'label': set()}), (17, {'turn': 1, 'label': set()}), (18, {'turn': 1, 'label': set()}), (20, {'turn': 2, 'label': set()}), (22, {'turn': 1, 'label': set()}), (23, {'turn': 2, 'label': set()}), (24, {'turn': 2, 'label': set()}), (25, {'turn': 2, 'label': set()}), (26, {'turn': 1, 'label': set()}), (27, {'turn': 2, 'label': set()}), (28, {'turn': 1, 'label': set()}), (29, {'turn': 2, 'label': set()}), (30, {'turn': 1, 'label': set()}), (31, {'turn': 1, 'label': set()}), (33, {'turn': 2, 'label': {'goal'}}), (34, {'turn': 1, 'label': set()}), (37, {'turn': 1, 'label': {'goal'}}), (38, {'turn': 2, 'label': set()}), (39, {'turn': 1, 'label': set()}), (42, {'turn': 2, 'label': set()}), (44, {'turn': 2, 'label': {'goal'}}), (47, {'turn': 2, 'label': set()}), (52, {'turn': 2, 'label': set()}), (54, {'turn': 2, 'label': set()}), (55, {'turn': 1, 'label': set()}), (56, {'turn': 2, 'label': set()}), (60, {'turn': 1, 'label': {'goal'}}), (61, {'turn': 1, 'label': set()}), (62, {'turn': 2, 'label': set()}), (65, {'turn': 2, 'label': set()}), (66, {'turn': 1, 'label': set()}), (67, {'turn': 1, 'label': set()}), (69, {'turn': 2, 'label': set()}), (70, {'turn': 2, 'label': set()}), (71, {'turn': 1, 'label': set()}), (74, {'turn': 2, 'label': set()}), (76, {'turn': 2, 'label': set()}), (77, {'turn': 2, 'label': set()}), (80, {'turn': 1, 'label': set()}), (81, {'turn': 2, 'label': set()}), (82, {'turn': 2, 'label': set()}), (85, {'turn': 2, 'label': {'goal'}}), (88, {'turn': 1, 'label': {'goal'}}), (92, {'turn': 2, 'label': set()}), (94, {'turn': 2, 'label': set()}), (96, {'turn': 2, 'label': set()}), (98, {'turn': 2, 'label': set()}), (100, {'turn': 1, 'label': set()}), (101, {'turn': 1, 'label': set()}), (104, {'turn': 2, 'label': set()}), (106, {'turn': 1, 'label': set()}), (108, {'turn': 2, 'label': set()}), (109, {'turn': 2, 'label': set()}), (111, {'turn': 1, 'label': {'goal'}}), (113, {'turn': 2, 'label': set()}), (115, {'turn': 2, 'label': set()}), (116, {'turn': 1, 'label': set()}), (117, {'turn': 1, 'label': set()}), (118, {'turn': 1, 'label': set()}), (120, {'turn': 2, 'label': set()}), (121, {'turn': 2, 'label': set()}), (122, {'turn': 2, 'label': set()}), (123, {'turn': 2, 'label': set()}), (129, {'turn': 2, 'label': set()}), (130, {'turn': 2, 'label': set()}), (131, {'turn': 2, 'label': set()}), (132, {'turn': 2, 'label': set()}), (133, {'turn': 2, 'label': {'goal'}}), (136, {'turn': 1, 'label': set()}), (137, {'turn': 2, 'label': set()}), (141, {'turn': 2, 'label': set()}), (145, {'turn': 1, 'label': {'goal'}}), (147, {'turn': 2, 'label': set()}), (148, {'turn': 2, 'label': set()}), (149, {'turn': 2, 'label': set()})], 
Edges:[(0, 136, 'b2'), (1, 66, 'b2'), (2, 2, 'b2'), (2, 2, 'b1'), (2, 2, 'b0'), (4, 61, 'b0'), (5, 81, 'a1'), (5, 115, 'a0'), (5, 133, 'a2'), (7, 69, 'a0'), (8, 118, 'b3'), (9, 88, 'b4'), (17, 74, 'a1'), (17, 23, 'a0'), (18, 4, 'a1'), (18, 20, 'a0'), (20, 26, 'b1'), (22, 74, 'a1'), (22, 74, 'a0'), (23, 116, 'b3'), (24, 22, 'b0'), (25, 66, 'b0'), (26, 149, 'a0'), (27, 30, 'b0'), (27, 5, 'b3'), (28, 149, 'a0'), (29, 116, 'b0'), (30, 85, 'a1'), (30, 81, 'a0'), (31, 24, 'a1'), (31, 27, 'a0'), (34, 70, 'a1'), (34, 94, 'a0'), (34, 92, 'a2'), (37, 37, 'a1'), (37, 37, 'a0'), (38, 101, 'b1'), (39, 52, 'a0'), (42, 101, 'b0'), (44, 44, 'b0'), (47, 101, 'b0'), (52, 28, 'b2'), (54, 60, 'b2'), (54, 101, 'b0'), (55, 38, 'a1'), (55, 123, 'a0'), (56, 22, 'b2'), (60, 60, 'a3'), (60, 60, 'a1'), (60, 60, 'a0'), (60, 60, 'a2'), (61, 65, 'a1'), (61, 98, 'a0'), (61, 24, 'a2'), (62, 145, 'b0'), (65, 80, 'b2'), (66, 109, 'a1'), (66, 24, 'a0'), (67, 98, 'a1'), (67, 141, 'a0'), (69, 55, 'b2'), (70, 67, 'b0'), (71, 24, 'a0'), (74, 74, 'b0'), (74, 74, 'b4'), (74, 74, 'b3'), (76, 116, 'b0'), (77, 28, 'b2'), (77, 28, 'b0'), (80, 80, 'a0'), (81, 117, 'b3'), (82, 67, 'b1'), (85, 85, 'b2'), (85, 85, 'b1'), (88, 88, 'a1'), (88, 88, 'a0'), (88, 88, 'a2'), (92, 136, 'b1'), (94, 136, 'b3'), (96, 101, 'b0'), (98, 26, 'b0'), (100, 52, 'a1'), (100, 82, 'a0'), (100, 23, 'a2'), (101, 101, 'a0'), (104, 37, 'b0'), (106, 123, 'a0'), (108, 17, 'b0'), (109, 71, 'b2'), (113, 80, 'b0'), (115, 106, 'b2'), (116, 96, 'a0'), (117, 47, 'a1'), (117, 4, 'a0'), (118, 133, 'a0'), (120, 111, 'b0'), (121, 30, 'b0'), (122, 55, 'b0'), (123, 116, 'b2'), (129, 67, 'b1'), (130, 145, 'b1'), (130, 111, 'b0'), (131, 100, 'b2'), (132, 88, 'b1'), (133, 133, 'b2'), (136, 131, 'a1'), (136, 62, 'a0'), (136, 24, 'a2'), (137, 118, 'b0'), (141, 18, 'b0'), (145, 145, 'a1'), (145, 145, 'a0'), (145, 145, 'a2'), (147, 145, 'b4'), (148, 55, 'b1'), (149, 55, 'b0')]
2023-09-16 04:01:25.326 | DEBUG    | solvers:solve:280 - Base game solved. 
Final: {80, 74, 101}.
Winning nodes P2: {2, 130, 132, 133, 8, 9, 137, 145, 147, 33, 37, 44, 54, 60, 62, 85, 88, 104, 111, 118, 120}.
Winning nodes P1: {0, 1, 129, 131, 4, 5, 7, 136, 141, 17, 18, 148, 149, 22, 23, 24, 25, 26, 20, 28, 29, 30, 31, 27, 34, 38, 39, 42, 47, 52, 55, 56, 61, 65, 66, 67, 69, 70, 71, 74, 76, 77, 80, 81, 82, 92, 94, 96, 98, 100, 101, 106, 108, 109, 113, 115, 116, 117, 121, 122, 123}.
2023-09-16 04:01:25.327 | DEBUG    | solvers:solve:298 - Value of deception: 0.8472222222222222
2023-09-16 04:01:25.327 | SUCCESS  | __main__:<module>:43 - Q. What is VoD if first three fakes were placed at where the first three traps were placed?
A. VoD(dswin, trap={101,74, 80})=0.8472, VoD(dswin,fake={101,74, 80})=0.8472222222222222
